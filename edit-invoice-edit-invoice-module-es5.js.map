{"version":3,"sources":["./src/app/edit-invoice/edit-invoice.page.html","./src/app/edit-invoice/edit-invoice.module.ts","./src/app/edit-invoice/edit-invoice.page.scss","./src/app/edit-invoice/edit-invoice.page.ts"],"names":[],"mappings":"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","file":"edit-invoice-edit-invoice-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Rechnung bearbeiten</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form class=\\\"edit-form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"editInvoice(validations_form.value)\\\">\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Rechnung ID</ion-label>\\r\\n      <ion-input type=\\\"string\\\" formControlName=\\\"id\\\" class=\\\"form-controll\\\" readonly></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Titel</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"title\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.title\\\">\\r\\n        <div class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"validations_form.get('title').hasError(validation.type) && (validations_form.get('title').dirty || validations_form.get('title').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Rechnungsbetrag</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"costs\\\" class=\\\"form-controll\\\" required></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.costs\\\">\\r\\n        <div class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"validations_form.get('costs').hasError(validation.type) && (validations_form.get('costs').dirty || validations_form.get('costs').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"primary\\\">Kategorie</ion-label>\\r\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"category\\\" required>\\r\\n        <ion-select-option *ngFor=\\\"let category of categories\\\" value=\\\"{{category}}\\\">\\r\\n          {{category.charAt(0).toUpperCase()}}{{category.slice(1)}}</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.category\\\">\\r\\n        <div class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"validations_form.get('category').hasError(validation.type) && (validations_form.get('category').dirty || validations_form.get('category').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label>Rechnungsdatum</ion-label>\\r\\n      <ion-datetime displayFormat=\\\"DD.MM.YYYY\\\" placeholder=\\\"Datum auswÃ¤hlen\\\" formControlName=\\\"date\\\" required [max]=\\\"dateUtils.getTodayAsISO8601()\\\">\\r\\n      </ion-datetime>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Notiz</ion-label>\\r\\n      <ion-textarea formControlName=\\\"note\\\" class=\\\"form-controll\\\"></ion-textarea>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.note\\\">\\r\\n        <div class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"validations_form.get('note').hasError(validation.type) && (validations_form.get('note').dirty || validations_form.get('note').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"error-message\\\">\\r\\n      <ion-label color=\\\"danger\\\">{{errorMessage}}</ion-label>\\r\\n    </div>\\r\\n\\r\\n    <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" size=\\\"large\\\" expand=\\\"full\\\" [disabled]=\\\"!validations_form.valid || saving\\\">\\r\\n      Speichern</ion-button>\\r\\n  </form>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EditInvoicePage } from './edit-invoice.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditInvoicePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [EditInvoicePage]\r\n})\r\nexport class EditInvoicePageModule {}\r\n","module.exports = \".validation-errors {\\n  margin: 15px;\\n}\\n\\n.submit-btn {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1pbnZvaWNlL0Q6XFxDb2RpbmdcXElvbmljLUFuZ3VsYXJcXGV4cGVuc2UtdHJhY2tlci9zcmNcXGFwcFxcZWRpdC1pbnZvaWNlXFxlZGl0LWludm9pY2UucGFnZS5zY3NzIiwic3JjL2FwcC9lZGl0LWludm9pY2UvZWRpdC1pbnZvaWNlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9lZGl0LWludm9pY2UvZWRpdC1pbnZvaWNlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52YWxpZGF0aW9uLWVycm9ycyB7XHJcbiAgICBtYXJnaW46IDE1cHg7XHJcbn1cclxuXHJcbi5zdWJtaXQtYnRuIHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbn0iLCIudmFsaWRhdGlvbi1lcnJvcnMge1xuICBtYXJnaW46IDE1cHg7XG59XG5cbi5zdWJtaXQtYnRuIHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatabaseService } from '../services/database/database.service';\r\nimport { Invoice } from '../models/invoice';\r\nimport { NavController } from '@ionic/angular';\r\nimport { DateUtils } from '../utils';\r\n\r\n@Component({\r\n  selector: 'app-edit-invoice',\r\n  templateUrl: './edit-invoice.page.html',\r\n  styleUrls: ['./edit-invoice.page.scss'],\r\n})\r\nexport class EditInvoicePage implements OnInit {\r\n\r\n  invoice: Invoice;\r\n\r\n  validations_form: FormGroup;\r\n  errorMessage: string = '';\r\n  validation_messages = validation_messages;\r\n  categories = [];\r\n  saving = false;\r\n\r\n  dateUtils;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    private dataService: DatabaseService) { }\r\n\r\n  ngOnInit() {\r\n    this.dateUtils = new DateUtils();\r\n    this.invoice = this.router.getCurrentNavigation().extras.state as Invoice;\r\n    this.categories = this.dataService.categories;\r\n    \r\n    this.validations_form = this.formBuilder.group({\r\n      id: new FormControl(this.invoice.id),\r\n      title: new FormControl(this.invoice.title, Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n      costs: new FormControl(this.invoice.costs, Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      category: new FormControl(this.invoice.category),\r\n      date: new FormControl(this.dateUtils.msDateToISO8601(+this.invoice.date), Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      note: new FormControl(this.invoice.note, Validators.compose([\r\n        Validators.required\r\n      ])),\r\n    });\r\n  }\r\n\r\n  editInvoice(invoice: Invoice) {\r\n    invoice.date = this.dateUtils.ISO8601toDate(invoice.date).getTime().toString();\r\n    this.saving = true;\r\n    this.dataService.updateInvoice(invoice).subscribe(() => {\r\n      this.saving = false;\r\n      this.navCtrl.back();\r\n    });\r\n  }\r\n\r\n}\r\n\r\nconst validation_messages = {\r\n  'title': [\r\n    { type: 'required', message: 'Titel wird benÃ¶tigt' },\r\n  ],\r\n  'costs': [\r\n    { type: 'required', message: 'Rechnungsbetrag wird benÃ¶tigt' },\r\n  ],\r\n  'category': [\r\n    { type: 'required', message: 'Kategorie wird benÃ¶tigt' },\r\n  ],\r\n  'date': [\r\n    { type: 'required', message: 'Rechnungsdatum wird benÃ¶tigt' },\r\n  ],\r\n  'note': [\r\n    { type: 'required', message: 'Notiz wird benÃ¶tigt' },\r\n  ],\r\n};\r\n"],"sourceRoot":""}
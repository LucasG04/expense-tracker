{"version":3,"sources":["./src/app/create-invoice/create-invoice.page.html","./src/app/create-invoice/create-invoice.module.ts","./src/app/create-invoice/create-invoice.page.scss","./src/app/create-invoice/create-invoice.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,44BAA44B,sBAAsB,wnBAAwnB,sBAAsB,4SAA4S,UAAU,mBAAmB,oCAAoC,mBAAmB,4ZAA4Z,sBAAsB,s2BAAs2B,sBAAsB,0IAA0I,cAAc,uO;;;;;;;;;;;;;;;;;;;;;;ACA70G;AACM;AACmB;AACX;AAEV;AAEa;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAYF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAVnC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;AC1BpC,sCAAsC,iBAAiB,GAAG,iBAAiB,qBAAqB,GAAG,6CAA6C,usB;;;;;;;;;;;;;;;;;;;;;ACA9F;AAC+B;AAElC;AACyB;AACnC;AAOrC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAU5B,YACU,WAAwB,EACxB,OAAsB,EACtB,WAA4B;QAF5B,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAiB;QAVtC,iBAAY,GAAW,EAAE,CAAC;QAC1B,wBAAmB,GAAG,mBAAmB,CAAC;QAC1C,eAAU,GAAG,EAAE,CAAC;QAChB,WAAM,GAAG,KAAK,CAAC;IAQX,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,gDAAS,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;QAE9C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC5C,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;YACH,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC5C,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;YACH,QAAQ,EAAE,IAAI,0DAAW,EAAE;YAC3B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC3C,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;YACH,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC3C,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,OAAgB;QAC5B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC/E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACrD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAnCwB,0DAAW;YACf,4DAAa;YACT,mFAAe;;AAb3B,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,kKAAyC;;KAE1C,CAAC;2EAYuB,0DAAW;QACf,4DAAa;QACT,mFAAe;GAb3B,iBAAiB,CA8C7B;AA9C6B;AAgD9B,MAAM,mBAAmB,GAAG;IAC1B,OAAO,EAAE;QACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,qBAAqB,EAAE;KACrD;IACD,OAAO,EAAE;QACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,+BAA+B,EAAE;KAC/D;IACD,UAAU,EAAE;QACV,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;KACzD;IACD,MAAM,EAAE;QACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,8BAA8B,EAAE;KAC9D;IACD,MAAM,EAAE;QACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,qBAAqB,EAAE;KACrD;CACF,CAAC","file":"create-invoice-create-invoice-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Rechnung erfassen</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form class=\\\"create-form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"createInvoice(validations_form.value)\\\">\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Titel</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"title\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.title\\\">\\r\\n        <div class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"validations_form.get('title').hasError(validation.type) && (validations_form.get('title').dirty || validations_form.get('title').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Rechnungsbetrag</ion-label>\\r\\n      <ion-input type=\\\"number\\\" formControlName=\\\"costs\\\" class=\\\"form-controll\\\" required></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.costs\\\">\\r\\n        <div class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"validations_form.get('costs').hasError(validation.type) && (validations_form.get('costs').dirty || validations_form.get('costs').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"primary\\\">Kategorie</ion-label>\\r\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"category\\\" required>\\r\\n        <ion-select-option *ngFor=\\\"let category of categories\\\" value=\\\"{{category}}\\\">\\r\\n          {{category.charAt(0).toUpperCase()}}{{category.slice(1)}}</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.category\\\">\\r\\n        <div class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"validations_form.get('category').hasError(validation.type) && (validations_form.get('category').dirty || validations_form.get('category').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label>Rechnungsdatum</ion-label>\\r\\n      <ion-datetime displayFormat=\\\"DD.MM.YYYY\\\" placeholder=\\\"Datum auswÃ¤hlen\\\" formControlName=\\\"date\\\" required [max]=\\\"dateUtils.getTodayAsISO8601()\\\">\\r\\n      </ion-datetime>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Notiz</ion-label>\\r\\n      <ion-textarea formControlName=\\\"note\\\" class=\\\"form-controll\\\"></ion-textarea>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.note\\\">\\r\\n        <div class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"validations_form.get('note').hasError(validation.type) && (validations_form.get('note').dirty || validations_form.get('note').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"error-message\\\">\\r\\n      <ion-label color=\\\"danger\\\">{{errorMessage}}</ion-label>\\r\\n    </div>\\r\\n\\r\\n    <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" size=\\\"large\\\" expand=\\\"full\\\" [disabled]=\\\"!validations_form.valid || saving\\\">\\r\\n      Erstellen</ion-button>\\r\\n  </form>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CreateInvoicePage } from './create-invoice.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CreateInvoicePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CreateInvoicePage]\r\n})\r\nexport class CreateInvoicePageModule {}\r\n","module.exports = \".validation-errors {\\n  margin: 15px;\\n}\\n\\n.submit-btn {\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLWludm9pY2UvRDpcXENvZGluZ1xcSW9uaWMtQW5ndWxhclxcZXhwZW5zZS10cmFja2VyL3NyY1xcYXBwXFxjcmVhdGUtaW52b2ljZVxcY3JlYXRlLWludm9pY2UucGFnZS5zY3NzIiwic3JjL2FwcC9jcmVhdGUtaW52b2ljZS9jcmVhdGUtaW52b2ljZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY3JlYXRlLWludm9pY2UvY3JlYXRlLWludm9pY2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZhbGlkYXRpb24tZXJyb3JzIHtcclxuICAgIG1hcmdpbjogMTVweDtcclxufVxyXG5cclxuLnN1Ym1pdC1idG4ge1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG4iLCIudmFsaWRhdGlvbi1lcnJvcnMge1xuICBtYXJnaW46IDE1cHg7XG59XG5cbi5zdWJtaXQtYnRuIHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Invoice } from '../models/invoice';\r\nimport { NavController } from '@ionic/angular';\r\nimport { DatabaseService } from '../services/database/database.service';\r\nimport { DateUtils } from '../utils';\r\n\r\n@Component({\r\n  selector: 'app-create-invoice',\r\n  templateUrl: './create-invoice.page.html',\r\n  styleUrls: ['./create-invoice.page.scss'],\r\n})\r\nexport class CreateInvoicePage implements OnInit {\r\n\r\n  validations_form: FormGroup;\r\n  errorMessage: string = '';\r\n  validation_messages = validation_messages;\r\n  categories = [];\r\n  saving = false;\r\n\r\n  dateUtils;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private navCtrl: NavController,\r\n    private dataService: DatabaseService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.dateUtils = new DateUtils();\r\n    this.categories = this.dataService.categories;\r\n\r\n    this.validations_form = this.formBuilder.group({\r\n      title: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n      costs: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      category: new FormControl(),\r\n      date: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      note: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n    });\r\n  }\r\n\r\n  createInvoice(invoice: Invoice) {\r\n    invoice.date = this.dateUtils.ISO8601toDate(invoice.date).getTime().toString();\r\n    this.saving = true;\r\n    this.dataService.createInvoice(invoice).subscribe(() => {\r\n      this.saving = false;\r\n      this.navCtrl.back();\r\n    });\r\n  }\r\n\r\n}\r\n\r\nconst validation_messages = {\r\n  'title': [\r\n    { type: 'required', message: 'Titel wird benÃ¶tigt' },\r\n  ],\r\n  'costs': [\r\n    { type: 'required', message: 'Rechnungsbetrag wird benÃ¶tigt' },\r\n  ],\r\n  'category': [\r\n    { type: 'required', message: 'Kategorie wird benÃ¶tigt' },\r\n  ],\r\n  'date': [\r\n    { type: 'required', message: 'Rechnungsdatum wird benÃ¶tigt' },\r\n  ],\r\n  'note': [\r\n    { type: 'required', message: 'Notiz wird benÃ¶tigt' },\r\n  ],\r\n};\r\n"],"sourceRoot":""}